{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/main.jsx\";\nimport React from 'react';\nimport Slide from '../components/Slide/Slide';\nimport axios from 'axios';\nimport './main.scss';\nimport News from '../components/News/News';\nimport clip from \"../assets/Icons/Clipboard.svg\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stage: {},\n      weather: {}\n    };\n    this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    axios.get('http://localhost:8080/scenarios').then(data => {\n      console.log(data.data);\n      this.setState({\n        stage: data.data.root\n      });\n    });\n  }\n\n  getCoordinates(position) {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    console.log(lat, long);\n    axios.get('http://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + long + '&appid=' + this.apiKey).then(results => {\n      console.log(results.data);\n      this.setState({\n        weather: results.data\n      });\n    });\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    }\n  }\n\n  nextSlide(slide) {\n    this.setState({\n      stage: slide\n    });\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(News, {\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: clip,\n      className: \"page__task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page__alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"!\"));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/main.jsx"],"names":["React","Slide","axios","News","Main","Component","constructor","props","state","stage","weather","apiKey","getCoordinates","bind","getLocation","componentDidMount","get","then","data","console","log","setState","root","position","long","coords","longitude","lat","latitude","results","navigator","geolocation","getCurrentPosition","nextSlide","slide","render","clip"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAGA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,MAAL,GAAc,kCAAd;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,WAAL;AACAZ,IAAAA,KAAK,CAACc,GAAN,CAAU,iCAAV,EAA6CC,IAA7C,CAAkDC,IAAI,IAAI;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACA,WAAKG,QAAL,CACI;AACIZ,QAAAA,KAAK,EAAES,IAAI,CAACA,IAAL,CAAUI;AADrB,OADJ;AAKH,KAPD;AAQH;;AAGDV,EAAAA,cAAc,CAACW,QAAD,EAAW;AACrB,UAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA7B;AACA,UAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAAiBH,IAAjB;AACAtB,IAAAA,KAAK,CAACc,GAAN,CAAU,wDAAsDW,GAAtD,GAA0D,OAA1D,GAAkEH,IAAlE,GAAuE,SAAvE,GAAiF,KAAKb,MAAhG,EAAwGM,IAAxG,CAA6GY,OAAO,IAAI;AACpHV,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAO,CAACX,IAApB;AACF,WAAKG,QAAL,CAAc;AACVX,QAAAA,OAAO,EAAEmB,OAAO,CAACX;AADP,OAAd;AAGD,KALD;AAMH;;AAEDJ,EAAAA,WAAW,GAAG;AACV,QAAIgB,SAAS,CAACC,WAAd,EAA2B;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKpB,cAA9C;AACH;AACJ;;AAIDqB,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAKb,QAAL,CACI;AACIZ,MAAAA,KAAK,EAAEyB;AADX,KADJ;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,GAAG,EAAE0B,IAAV;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CADJ;AAQH;;AA/D8B;;AAkEnC,eAAehC,IAAf","sourcesContent":["import React from 'react';\nimport Slide from '../components/Slide/Slide';\nimport axios from 'axios';\nimport './main.scss';\nimport News from '../components/News/News';\nimport clip from '../assets/Icons/Clipboard.svg';\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stage: {},\n            weather: {}\n        }\n        this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n        this.getCoordinates = this.getCoordinates.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    componentDidMount() {\n        this.getLocation();\n        axios.get('http://localhost:8080/scenarios').then(data => {\n            console.log(data.data)\n            this.setState(\n                {\n                    stage: data.data.root\n                }\n            )\n        })\n    }\n\n\n    getCoordinates(position) {\n        const long = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat, long);\n        axios.get('http://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+long+'&appid='+this.apiKey).then(results => {\n            console.log(results.data);\n          this.setState({\n              weather: results.data\n          }) \n        })\n    }\n\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        }\n    }\n\n    \n\n    nextSlide(slide) {\n        this.setState(\n            {\n                stage: slide\n            }\n        )\n    }\n\n    render() {\n        return (\n            <main className='page'>\n                <News weather={this.state.weather}/>\n                {/*<Slide story={this.state.stage} nextHandler={this.nextSlide.bind(this)}/>*/}\n                <img src={clip} className='page__task'/>\n                <div className='page__alert'>!</div>\n            </main>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}