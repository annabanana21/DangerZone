{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/GameController.jsx\";\nimport React from 'react';\nimport Main from '../pages/main';\nimport axios from 'axios';\nimport Display from '../pages/display';\nimport BinarySearchTree from '../functions/binary';\n\nclass GameController extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isHome: true,\n      isPlaying: false,\n      story: [],\n      storyLeft: [],\n      userStats: []\n    };\n  }\n\n  formatData(arr) {\n    return arr.map(object => {\n      let newTree = new BinarySearchTree();\n      newTree.insertAll(object.scenario);\n      return {\n        intro: object.intro,\n        title: object.title,\n        category: object.category,\n        tree: newTree\n      };\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/story/freeze').then(res => {\n      let storyLine = this.formatData(res.data);\n      this.setState({\n        story: storyLine,\n        storyLeft: storyLine\n      });\n    });\n  }\n\n  change() {\n    this.setState({\n      isHome: !this.state.isHome,\n      isPlaying: !this.state.isPlaying\n    });\n  }\n\n  render() {\n    console.log(this.state.story);\n\n    if (this.state.isHome) {\n      return React.createElement(Main, {\n        story: this.state.story,\n        storyLeft: this.state.storyLeft,\n        change: () => this.change(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    } else if (this.state.isPlaying) {\n      return React.createElement(Display, {\n        story: this.state.storyLeft[0],\n        change: () => this.change(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default GameController;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/GameController.jsx"],"names":["React","Main","axios","Display","BinarySearchTree","GameController","Component","state","isHome","isPlaying","story","storyLeft","userStats","formatData","arr","map","object","newTree","insertAll","scenario","intro","title","category","tree","componentDidMount","get","then","res","storyLine","data","setState","change","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,MAAM,EAAE,IADJ;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,SAAS,EAAE,EAJP;AAKJC,MAAAA,SAAS,EAAE;AALP,KAFiC;AAAA;;AAUzCC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,WAAOA,GAAG,CAACC,GAAJ,CAAQC,MAAM,IAAI;AACrB,UAAIC,OAAO,GAAG,IAAIb,gBAAJ,EAAd;AACAa,MAAAA,OAAO,CAACC,SAAR,CAAkBF,MAAM,CAACG,QAAzB;AACA,aAAO;AACHC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KADX;AAEHC,QAAAA,KAAK,EAAEL,MAAM,CAACK,KAFX;AAGHC,QAAAA,QAAQ,EAAEN,MAAM,CAACM,QAHd;AAIHC,QAAAA,IAAI,EAAEN;AAJH,OAAP;AAMH,KATM,CAAP;AAUH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChBtB,IAAAA,KAAK,CAACuB,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAqDC,GAAG,IAAI;AACxD,UAAIC,SAAS,GAAG,KAAKf,UAAL,CAAgBc,GAAG,CAACE,IAApB,CAAhB;AACA,WAAKC,QAAL,CAAc;AACVpB,QAAAA,KAAK,EAAEkB,SADG;AAEVjB,QAAAA,SAAS,EAAEiB;AAFD,OAAd;AAIH,KAND;AAOH;;AAEDG,EAAAA,MAAM,GAAG;AACL,SAAKD,QAAL,CAAc;AACVtB,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC,MADV;AAEVC,MAAAA,SAAS,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAFb,KAAd;AAIH;;AAEDuB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWG,KAAvB;;AACA,QAAI,KAAKH,KAAL,CAAWC,MAAf,EAAuB;AACnB,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,KAAxB;AAA+B,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,SAArD;AAAgE,QAAA,MAAM,EAAE,MAAM,KAAKoB,MAAL,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJD,MAIO,IAAI,KAAKxB,KAAL,CAAWE,SAAf,EAA0B;AAC7B,aAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWI,SAAX,CAAqB,CAArB,CAAhB;AAAyC,QAAA,MAAM,EAAE,MAAM,KAAKoB,MAAL,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAjDwC;;AAoD7C,eAAe1B,cAAf","sourcesContent":["import React from 'react';\nimport Main from '../pages/main';\nimport axios from 'axios';\nimport Display from '../pages/display';\nimport BinarySearchTree from '../functions/binary';\n\nclass GameController extends React.Component {\n\n    state = {\n        isHome: true,\n        isPlaying: false,\n        story: [],\n        storyLeft: [],\n        userStats: []\n    }\n\n    formatData(arr) {\n        return arr.map(object => {\n            let newTree = new BinarySearchTree()\n            newTree.insertAll(object.scenario)\n            return {\n                intro: object.intro,\n                title: object.title,\n                category: object.category,\n                tree: newTree\n            }\n        })\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8080/story/freeze').then(res => {\n            let storyLine = this.formatData(res.data)\n            this.setState({\n                story: storyLine,\n                storyLeft: storyLine\n            })\n        })\n    }\n\n    change() {\n        this.setState({\n            isHome: !this.state.isHome,\n            isPlaying: !this.state.isPlaying\n        })\n    }\n\n    render() {\n        console.log(this.state.story)\n        if (this.state.isHome) {\n            return (\n                <Main story={this.state.story} storyLeft={this.state.storyLeft} change={() => this.change()}/>\n            )\n        } else if (this.state.isPlaying) {\n            return <Display story={this.state.storyLeft[0]} change={() => this.change()}/>;\n        }\n    }\n}\n\nexport default GameController;"]},"metadata":{},"sourceType":"module"}