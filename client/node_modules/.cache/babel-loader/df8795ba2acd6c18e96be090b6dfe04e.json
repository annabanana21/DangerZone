{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/SlideController.jsx\";\nimport React from 'react';\nimport Complete from '../components/Complete/Complete';\nimport Slide from '../components/Slide/Slide';\n\nclass SlideController extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stage: '',\n      finish: false,\n      intro: true,\n      showButton: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      stage: this.props.story.tree.root\n    });\n    setTimeout(() => {}, 6000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.story !== this.props.story) {\n      this.setState({\n        stage: this.props.story.tree.root,\n        finish: false\n      });\n    }\n  }\n\n  nextSlide(slide) {\n    if (slide.right && slide.left) {\n      this.setState({\n        stage: slide\n      });\n    } else {\n      this.setState({\n        finish: true,\n        stage: slide\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.finish) {\n      return React.createElement(Slide, {\n        story: this.state.stage,\n        nextHandler: slide => this.nextSlide(slide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    } else if (this.state.finish) {\n      return React.createElement(Complete, {\n        story: this.state.stage,\n        change: this.props.change,\n        lose: this.props.lose,\n        nextStory: this.props.nextStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    } else if (this.state.intro) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default SlideController;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/SlideController.jsx"],"names":["React","Complete","Slide","SlideController","Component","state","stage","finish","intro","showButton","componentDidMount","setState","props","story","tree","root","setTimeout","componentDidUpdate","prevProps","nextSlide","slide","right","left","render","change","lose","nextStory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAAA;AAAA;AAAA,SAE1CC,KAF0C,GAElC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAFkC;AAAA;;AAS1CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC;AADnB,KAAd;AAGAC,IAAAA,UAAU,CAAC,MAAM,CAChB,CADS,EACP,IADO,CAAV;AAEH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACL,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACtC,WAAKF,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC,IADnB;AAEVR,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIH;AACJ;;AAEDY,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,QAAIA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACE,IAAzB,EAA+B;AAC3B,WAAKX,QAAL,CACI;AACIL,QAAAA,KAAK,EAAEc;AADX,OADJ;AAKH,KAND,MAMO;AACH,WAAKT,QAAL,CACI;AACIJ,QAAAA,MAAM,EAAE,IADZ;AAEID,QAAAA,KAAK,EAAEc;AAFX,OADJ;AAMH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKlB,KAAL,CAAWE,MAAhB,EAAwB;AACpB,aAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAAzB;AAAgC,QAAA,WAAW,EAAGc,KAAD,IAAW,KAAKD,SAAL,CAAeC,KAAf,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAI,KAAKf,KAAL,CAAWE,MAAf,EAAuB;AAC1B,aAAO,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAA5B;AAAmC,QAAA,MAAM,EAAE,KAAKM,KAAL,CAAWY,MAAtD;AAA8D,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWa,IAA/E;AAAqF,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWc,SAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAI,KAAKrB,KAAL,CAAWG,KAAf,EAAsB;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAnDyC;;AAsD9C,eAAeL,eAAf","sourcesContent":["import React from 'react';\nimport Complete from '../components/Complete/Complete';\nimport Slide from '../components/Slide/Slide';\n\nclass SlideController extends React.Component {\n\n    state = {\n        stage: '',\n        finish: false,\n        intro: true,\n        showButton: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            stage: this.props.story.tree.root\n        })\n        setTimeout(() => {\n        }, 6000)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.story !== this.props.story) {\n            this.setState({\n                stage: this.props.story.tree.root,\n                finish: false\n            })\n        }\n    }\n\n    nextSlide(slide) {\n        if (slide.right && slide.left) {\n            this.setState(\n                {\n                    stage: slide\n                }\n            )\n        } else {\n            this.setState(\n                {\n                    finish: true,\n                    stage: slide\n                }\n            )\n        }\n    }\n\n    render() {\n        if (!this.state.finish) {\n            return <Slide story={this.state.stage} nextHandler={(slide) => this.nextSlide(slide)}/>\n        } else if (this.state.finish) {\n            return <Complete story={this.state.stage} change={this.props.change} lose={this.props.lose} nextStory={this.props.nextStory}/>\n        } else if (this.state.intro) {\n            return <div></div>\n        }\n    }\n}\n\nexport default SlideController;"]},"metadata":{},"sourceType":"module"}