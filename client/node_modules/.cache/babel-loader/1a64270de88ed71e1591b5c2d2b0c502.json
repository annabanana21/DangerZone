{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/display.jsx\";\nimport React from 'react';\nimport './display.scss';\nimport Slide from '../components/Slide/Slide';\nimport Complete from '../components/Complete/Complete';\nimport BackgroundVideo from '../components/BackgroundVideo/BackgroundVideo';\nimport SlideController from '../controller/SlideController';\nimport Intro from '../components/Intro/Intro';\n\nclass Display extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      intro: true,\n      showButton: false\n    };\n  }\n\n  componentDidMount() {\n    this.audio = new Audio('http://localhost:8080/public/audio/' + this.props.story.audio);\n    this.audio.load();\n    this.audio.loop = true;\n    this.playAudio();\n    setTimeout(() => {\n      this.setState({\n        showButton: true\n      });\n    }, 6000);\n  }\n\n  componentWillUnmount() {\n    this.audio.pause();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.story !== this.props.story) {\n      console.log('here at updated');\n      this.audio.pause();\n      this.audio = new Audio('http://localhost:8080/public/audio/' + this.props.story.audio);\n      this.audio.load();\n      this.audio.loop = true;\n      this.playAudio();\n      this.setState({\n        intro: true,\n        showButton: false\n      });\n      setTimeout(() => {\n        this.setState({\n          showButton: true\n        });\n      }, 6000);\n    }\n  }\n\n  playAudio() {\n    const audioPromise = this.audio.play();\n\n    if (audioPromise !== undefined) {\n      audioPromise.then(_ => {// autoplay started\n      }).catch(err => {\n        // catch dom exception\n        console.info(err);\n      });\n    }\n  }\n\n  startStory() {\n    this.setState({\n      intro: false\n    });\n  }\n\n  render() {\n    if (this.state.intro) {\n      return React.createElement(Intro, {\n        showButton: this.state.showButton,\n        intro: this.props.story.intro,\n        startStory: () => this.startStory(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(BackgroundVideo, {\n        story: this.props.story,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(SlideController, {\n        lose: this.props.lose,\n        story: this.props.story,\n        change: this.props.change,\n        nextStory: this.props.nextStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/display.jsx"],"names":["React","Slide","Complete","BackgroundVideo","SlideController","Intro","Display","Component","state","intro","showButton","componentDidMount","audio","Audio","props","story","load","loop","playAudio","setTimeout","setState","componentWillUnmount","pause","componentDidUpdate","prevProps","console","log","audioPromise","play","undefined","then","_","catch","err","info","startStory","render","lose","change","nextStory"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './display.scss';\nimport Slide from '../components/Slide/Slide';\nimport Complete from '../components/Complete/Complete';\nimport BackgroundVideo from '../components/BackgroundVideo/BackgroundVideo';\nimport SlideController from '../controller/SlideController';\nimport Intro from '../components/Intro/Intro';\n\nclass Display extends React.Component {\n\n    state={\n        intro: true,\n        showButton: false\n    }\n\n    componentDidMount() {\n        this.audio = new Audio('http://localhost:8080/public/audio/'+this.props.story.audio);\n        this.audio.load();\n        this.audio.loop = true;\n        this.playAudio();\n\n        setTimeout(() => {\n            this.setState({\n                showButton: true\n            })\n        }, 6000)\n    }\n\n    componentWillUnmount() {\n        this.audio.pause();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.story !== this.props.story) {\n            console.log('here at updated');\n            this.audio.pause();\n            this.audio = new Audio('http://localhost:8080/public/audio/'+this.props.story.audio);\n            this.audio.load();\n            this.audio.loop = true;\n            this.playAudio();\n\n            this.setState({\n                intro: true,\n                showButton: false\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    showButton: true\n                })\n            }, 6000)\n        }\n    }\n\n    playAudio() {\n        const audioPromise = this.audio.play()\n        if (audioPromise !== undefined) {\n          audioPromise\n            .then(_ => {\n              // autoplay started\n            })\n            .catch(err => {\n              // catch dom exception\n              console.info(err)\n            })\n        }\n    }\n\n    startStory() {\n        this.setState({\n            intro: false\n        })\n    }\n\n    render() {\n        if (this.state.intro) {\n            return <Intro showButton={this.state.showButton} intro={this.props.story.intro} startStory={() => this.startStory()}/>\n        } else {\n            return <BackgroundVideo story={this.props.story}><SlideController lose={this.props.lose} story={this.props.story} change={this.props.change} nextStory={this.props.nextStory}/></BackgroundVideo>  \n        }\n    }\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}