{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/GameController.jsx\";\nimport React from 'react';\nimport Main from '../pages/main';\nimport axios from 'axios';\nimport Display from '../pages/display';\nimport BinarySearchTree from '../functions/binary';\n\nclass GameController extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHome: true,\n      isPlaying: false,\n      story: [],\n      storyLeft: [],\n      userStats: [],\n      weather: []\n    };\n    this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  formatData(arr) {\n    return arr.map(object => {\n      let newTree = new BinarySearchTree();\n      newTree.insertAll(object.scenario);\n      return {\n        intro: object.intro,\n        title: object.title,\n        category: object.category,\n        tree: newTree\n      };\n    });\n  }\n\n  getCoordinates(position) {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    console.log(lat, long);\n    axios.get('http://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + long + '&appid=' + this.apiKey).then(results => {\n      console.log(results.data);\n      this.setState({\n        weather: results.data\n      });\n    });\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    }\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    /*axios.get('http://localhost:8080/story/heat').then(res => {\n        let storyLine = this.formatData(res.data)\n        this.setState({\n            story: storyLine,\n            storyLeft: storyLine\n        })\n    })*/\n  }\n\n  change() {\n    this.setState({\n      isHome: !this.state.isHome,\n      isPlaying: !this.state.isPlaying\n    });\n  }\n\n  render() {\n    console.log(this.state.story);\n\n    if (this.state.isHome) {\n      return React.createElement(Main, {\n        weather: this.state.weather,\n        story: this.state.story,\n        storyLeft: this.state.storyLeft,\n        change: () => this.change(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    } else if (this.state.isPlaying) {\n      return React.createElement(Display, {\n        story: this.state.storyLeft[0],\n        change: () => this.change(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default GameController;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/GameController.jsx"],"names":["React","Main","axios","Display","BinarySearchTree","GameController","Component","constructor","props","state","isHome","isPlaying","story","storyLeft","userStats","weather","apiKey","getCoordinates","bind","getLocation","formatData","arr","map","object","newTree","insertAll","scenario","intro","title","category","tree","position","long","coords","longitude","lat","latitude","console","log","get","then","results","data","setState","navigator","geolocation","getCurrentPosition","componentDidMount","change","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Main from '../pages/main';\nimport axios from 'axios';\nimport Display from '../pages/display';\nimport BinarySearchTree from '../functions/binary';\n\nclass GameController extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHome: true,\n            isPlaying: false,\n            story: [],\n            storyLeft: [],\n            userStats: [],\n            weather: []\n        }\n        this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n        this.getCoordinates = this.getCoordinates.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n\n    formatData(arr) {\n        return arr.map(object => {\n            let newTree = new BinarySearchTree()\n            newTree.insertAll(object.scenario)\n            return {\n                intro: object.intro,\n                title: object.title,\n                category: object.category,\n                tree: newTree\n            }\n        })\n    }\n\n    getCoordinates(position) {\n        const long = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat, long);\n        axios.get('http://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+long+'&appid='+this.apiKey).then(results => {\n            console.log(results.data);\n          this.setState({\n              weather: results.data\n          }) \n        })\n    }\n\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        }\n    }\n\n    componentDidMount() {\n        this.getLocation();\n        /*axios.get('http://localhost:8080/story/heat').then(res => {\n            let storyLine = this.formatData(res.data)\n            this.setState({\n                story: storyLine,\n                storyLeft: storyLine\n            })\n        })*/\n    }\n\n    change() {\n        this.setState({\n            isHome: !this.state.isHome,\n            isPlaying: !this.state.isPlaying\n        })\n    }\n\n    render() {\n        console.log(this.state.story)\n        if (this.state.isHome) {\n            return (\n                <Main weather={this.state.weather} story={this.state.story} storyLeft={this.state.storyLeft} change={() => this.change()}/>\n            )\n        } else if (this.state.isPlaying) {\n            return <Display story={this.state.storyLeft[0]} change={() => this.change()}/>;\n        }\n    }\n}\n\nexport default GameController;"]},"metadata":{},"sourceType":"module"}