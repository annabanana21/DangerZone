{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/main.jsx\";\nimport React from 'react';\nimport Slide from '../components/Slide/Slide';\nimport axios from 'axios';\nimport './main.scss';\nimport News from '../components/News/News';\nimport StoryBoard from '../components/StoryBoard/StoryBoard';\nimport Health from '../components/Health/Health';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stage: {},\n      weather: {},\n      health: 100\n    };\n    this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  getCoordinates(position) {\n    const long = position.coords.longitude;\n    const lat = position.coords.latitude;\n    console.log(lat, long);\n    axios.get('http://api.openweathermap.org/data/2.5/weather?lat=' + lat + '&lon=' + long + '&appid=' + this.apiKey).then(results => {\n      console.log(results.data);\n      this.setState({\n        weather: results.data\n      });\n    });\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    }\n  }\n\n  nextSlide(slide) {\n    this.setState({\n      stage: slide\n    });\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(News, {\n      weather: this.state.weather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(StoryBoard, {\n      story: this.props.story,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Health, {\n      health: this.state.health,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/pages/main.jsx"],"names":["React","Slide","axios","News","StoryBoard","Health","Main","Component","constructor","props","state","stage","weather","health","apiKey","getCoordinates","bind","getLocation","componentDidMount","position","long","coords","longitude","lat","latitude","console","log","get","then","results","data","setState","navigator","geolocation","getCurrentPosition","nextSlide","slide","render","story"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKA,SAAKC,MAAL,GAAc,kCAAd;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,WAAL;AACH;;AAGDF,EAAAA,cAAc,CAACI,QAAD,EAAW;AACrB,UAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA7B;AACA,UAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBH,IAAjB;AACAlB,IAAAA,KAAK,CAACyB,GAAN,CAAU,wDAAsDJ,GAAtD,GAA0D,OAA1D,GAAkEH,IAAlE,GAAuE,SAAvE,GAAiF,KAAKN,MAAhG,EAAwGc,IAAxG,CAA6GC,OAAO,IAAI;AACpHJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,IAApB;AACF,WAAKC,QAAL,CAAc;AACVnB,QAAAA,OAAO,EAAEiB,OAAO,CAACC;AADP,OAAd;AAGD,KALD;AAMH;;AAEDb,EAAAA,WAAW,GAAG;AACV,QAAIe,SAAS,CAACC,WAAd,EAA2B;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKnB,cAA9C;AACH;AACJ;;AAIDoB,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,SAAKL,QAAL,CACI;AACIpB,MAAAA,KAAK,EAAEyB;AADX,KADJ;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAW6B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWG,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAxD8B;;AA2DnC,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport Slide from '../components/Slide/Slide';\nimport axios from 'axios';\nimport './main.scss';\nimport News from '../components/News/News';\nimport StoryBoard from '../components/StoryBoard/StoryBoard';\nimport Health from '../components/Health/Health';\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stage: {},\n            weather: {},\n            health: 100\n        }\n        this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n        this.getCoordinates = this.getCoordinates.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    componentDidMount() {\n        this.getLocation();\n    }\n\n\n    getCoordinates(position) {\n        const long = position.coords.longitude;\n        const lat = position.coords.latitude;\n        console.log(lat, long);\n        axios.get('http://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+long+'&appid='+this.apiKey).then(results => {\n            console.log(results.data);\n          this.setState({\n              weather: results.data\n          }) \n        })\n    }\n\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        }\n    }\n\n    \n\n    nextSlide(slide) {\n        this.setState(\n            {\n                stage: slide\n            }\n        )\n    }\n\n    render() {\n        return (\n            <main className='page'>\n                <News weather={this.state.weather}/>\n                {/*<Slide story={this.state.stage} nextHandler={this.nextSlide.bind(this)}/>*/}\n                <StoryBoard story={this.props.story}/>\n                <Health health={this.state.health}/>\n            </main>\n        )\n    }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}