{"ast":null,"code":"import _toConsumableArray from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Main from'../pages/main';import axios from'axios';import Display from'../pages/display';import BinarySearchTree from'../functions/binary';import iconPicker from'../functions/iconPicker';import Loading from'../pages/loading';import EndScreen from'../components/EndScreen/EndScreen';import earth from\"../assets/Icons/Earthquake.svg\";import cold from\"../assets/Icons/ColdWave.svg\";import tornado from\"../assets/Icons/Hurricane.svg\";var GameController=/*#__PURE__*/function(_React$Component){_inherits(GameController,_React$Component);function GameController(props){var _this;_classCallCheck(this,GameController);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameController).call(this,props));_this.manualSet=function(keyWord){var details=_this.games.find(function(game){return game[2]===keyWord;});var weather=_this.state.weather[3];if(weather<-20&&details[0]!=='DEEP FREEZE'){weather=weather+40;}else if(weather>-40&&details[0]==='DEEP FREEZE'){weather=weather-40;}_this.setState({weather:[].concat(_toConsumableArray(details),[weather])});};_this.getCoordinates=function(position){var long=position.coords.longitude;var lat=position.coords.latitude;axios.get('https://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+long+'&appid='+_this.apiKey).then(function(results){_this.setState({weather:iconPicker(results.data)});_this.getStoryLine(_this.state.weather[2]);});};_this.getLocation=function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(_this.getCoordinates);}};_this.state={isHome:false,isPlaying:false,load:true,ended:false,lastStory:false,story:[],storyLeft:[],userStats:{health:100,lost:false},weather:[],population:Math.floor(Math.random()*2000000)+250000};_this.apiKey='4774ad80334f760f9b45af484c39e9fe';_this.games=[['TORNADO WARNING',tornado,'wind'],['DEEP FREEZE',cold,'freeze'],['EARTHQUAKE WARNING',earth,'earth']];return _this;}_createClass(GameController,[{key:\"refresh\",value:function refresh(keyWord){console.log(keyWord);if(!keyWord){this.getLocation();}else{this.manualSet(keyWord);this.getStoryLine(keyWord);}this.setState({isHome:true,isPlaying:false,ended:false,lastStory:false,userStats:{health:100,lost:false}});}},{key:\"popSetter\",value:function popSetter(newPopulation){this.setState({population:newPopulation});}},{key:\"formatData\",value:function formatData(arr){return arr.map(function(object){var newTree=new BinarySearchTree();newTree.insertAll(object.scenario);return{intro:object.intro,title:object.title,background:object.background,audio:object.sound,category:object.category,tree:newTree};});}},{key:\"getStoryLine\",value:function getStoryLine(category){var _this2=this;axios.get('http://localhost:8080/story/'+category).then(function(res){var storyLine=_this2.formatData(res.data);_this2.setState({story:storyLine,storyLeft:_toConsumableArray(storyLine)});});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getLocation();}},{key:\"change\",value:function change(){this.setState({isHome:!this.state.isHome,isPlaying:!this.state.isPlaying});}},{key:\"lose\",value:function lose(healthLoss,home){var goHome=home;var newHealth=this.state.userStats.health-healthLoss;var theyLost=false;var ended=false;var isPlaying=!home;if(newHealth<=0){theyLost=true;newHealth=0;ended=true;isPlaying=false;goHome=false;}if(this.state.lastStory&&newHealth>0){this.setState({isHome:false,ended:true,isPlaying:false,userStats:{health:newHealth,lost:false}});}else{var lastStory=false;var newArr=this.state.storyLeft.slice(1);if(newArr[0]===this.state.story[this.state.story.length-1]){lastStory=true;}this.setState({isHome:goHome,ended:ended,storyLeft:newArr,isPlaying:isPlaying,lastStory:lastStory,userStats:{health:newHealth,lost:theyLost}});}}},{key:\"startGame\",value:function startGame(){this.setState({load:false,isHome:true});}},{key:\"render\",value:function render(){var _this3=this;if(this.state.isHome){return React.createElement(Main,{popSetter:function popSetter(x){return _this3.popSetter(x);},population:this.state.population,health:this.state.userStats,weather:this.state.weather,story:this.state.story,storyLeft:this.state.storyLeft,change:function change(){return _this3.change();}});}else if(this.state.isPlaying){return React.createElement(Display,{lastStory:this.state.lastStory,health:this.state.userStats,story:this.state.storyLeft[0],change:function change(){return _this3.change();},lose:function lose(i,x){return _this3.lose(i,x);},nextStory:function nextStory(){return _this3.nextStory();}});}else if(this.state.ended){return React.createElement(EndScreen,{weather:this.state.weather,stats:this.state.userStats,refresh:function refresh(x){_this3.refresh(x);}});}else{return React.createElement(Loading,{startGame:function startGame(){return _this3.startGame();}});}}}]);return GameController;}(React.Component);export default GameController;","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/src/controller/GameController.jsx"],"names":["React","Main","axios","Display","BinarySearchTree","iconPicker","Loading","EndScreen","GameController","props","manualSet","keyWord","details","games","find","game","weather","state","setState","getCoordinates","position","long","coords","longitude","lat","latitude","get","apiKey","then","results","data","getStoryLine","getLocation","navigator","geolocation","getCurrentPosition","isHome","isPlaying","load","ended","lastStory","story","storyLeft","userStats","health","lost","population","Math","floor","random","tornado","cold","earth","console","log","newPopulation","arr","map","object","newTree","insertAll","scenario","intro","title","background","audio","sound","category","tree","res","storyLine","formatData","healthLoss","home","goHome","newHealth","theyLost","newArr","slice","length","x","popSetter","change","i","lose","nextStory","refresh","startGame","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Main from '../pages/main';\nimport axios from 'axios';\nimport Display from '../pages/display';\nimport BinarySearchTree from '../functions/binary';\nimport iconPicker from '../functions/iconPicker';\nimport Loading from '../pages/loading';\nimport EndScreen from '../components/EndScreen/EndScreen';\nimport earth from '../assets/Icons/Earthquake.svg';\nimport cold from '../assets/Icons/ColdWave.svg';\nimport tornado from '../assets/Icons/Hurricane.svg';\n\nclass GameController extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHome: false,\n            isPlaying: false,\n            load: true,\n            ended: false,\n            lastStory: false,\n            story: [],\n            storyLeft: [],\n            userStats: {\n                health: 100,\n                lost: false\n            },\n            weather: [],\n            population: Math.floor(Math.random() * 2000000) + 250000\n        }\n        this.apiKey = '4774ad80334f760f9b45af484c39e9fe';\n        this.games = [['TORNADO WARNING', tornado, 'wind'], ['DEEP FREEZE', cold, 'freeze'], ['EARTHQUAKE WARNING', earth, 'earth']]\n    }\n\n    refresh(keyWord) {\n        console.log(keyWord)\n        if (!keyWord) {\n            this.getLocation();\n        } else {\n            this.manualSet(keyWord);\n            this.getStoryLine(keyWord);\n        }\n        this.setState({\n            isHome: true,\n            isPlaying: false,\n            ended: false,\n            lastStory: false,\n            userStats: {\n                health: 100,\n                lost: false\n            }\n        })\n    }\n\n    manualSet = (keyWord) => {\n        let details = this.games.find(game => game[2] === keyWord);\n        let weather = this.state.weather[3]\n        if (weather < -20 && details[0] !== 'DEEP FREEZE') {\n            weather = weather + 40;\n        } else if (weather > -40 && details[0] === 'DEEP FREEZE') {\n            weather = weather-40;\n        }\n        this.setState({\n            weather: [...details, weather]\n        })\n    }\n\n    popSetter(newPopulation) {\n        this.setState(\n            {\n                population: newPopulation\n            }\n        )\n    }\n\n\n    formatData(arr) {\n        return arr.map(object => {\n            let newTree = new BinarySearchTree()\n            newTree.insertAll(object.scenario)\n            return {\n                intro: object.intro,\n                title: object.title,\n                background: object.background,\n                audio: object.sound,\n                category: object.category,\n                tree: newTree\n            }\n        })\n    }\n\n    getCoordinates = (position) => {\n        const long = position.coords.longitude;\n        const lat = position.coords.latitude;\n        axios.get('https://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+long+'&appid='+this.apiKey).then(results => {\n          this.setState({\n              weather: iconPicker(results.data)\n          })\n          this.getStoryLine(this.state.weather[2])\n        })\n    }\n\n    getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        }\n    }\n\n    getStoryLine(category) {\n        axios.get('http://localhost:8080/story/'+category).then(res => {\n            let storyLine = this.formatData(res.data)\n            this.setState({\n                story: storyLine,\n                storyLeft: [...storyLine]\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getLocation();\n    }\n\n    change() {\n        this.setState({\n            isHome: !this.state.isHome,\n            isPlaying: !this.state.isPlaying\n        })\n    }\n\n    lose(healthLoss, home) {\n\n        let goHome = home;\n        let newHealth = this.state.userStats.health - healthLoss\n        let theyLost = false;\n        let ended = false;\n        let isPlaying = !home;\n        if (newHealth <= 0) {\n            theyLost = true;\n            newHealth = 0;\n            ended = true;\n            isPlaying = false\n            goHome = false\n        }\n        if (this.state.lastStory && newHealth > 0) {\n            this.setState({\n                isHome: false,\n                ended: true,\n                isPlaying: false,\n                userStats: {\n                    health: newHealth,\n                    lost: false\n                }\n            })\n        } else {\n           let lastStory = false;\n            let newArr = this.state.storyLeft.slice(1);\n            if (newArr[0] === this.state.story[this.state.story.length-1]) {\n                lastStory = true\n            }\n            this.setState({\n                isHome: goHome,\n                ended: ended,\n                storyLeft: newArr,\n                isPlaying: isPlaying,\n                lastStory,\n                userStats: {\n                    health: newHealth,\n                    lost: theyLost\n                }\n            }) \n        }\n    }\n\n    startGame() {\n        this.setState({\n            load: false,\n            isHome: true\n        })\n    }\n\n    render() {\n        if (this.state.isHome) {\n            return (\n                <Main popSetter={(x) => this.popSetter(x)} population={this.state.population} health={this.state.userStats} weather={this.state.weather} story={this.state.story} storyLeft={this.state.storyLeft} change={() => this.change()}/>\n            )\n        } else if (this.state.isPlaying) {\n            return <Display lastStory={this.state.lastStory} health={this.state.userStats} story={this.state.storyLeft[0]} change={() => this.change()} lose={(i,x) => this.lose(i,x)} nextStory={() => this.nextStory()}/>;\n        } else if (this.state.ended) {\n            return <EndScreen weather={this.state.weather} stats={this.state.userStats} refresh={(x) => {this.refresh(x)}}/>\n        }\n        else {\n            return <Loading startGame={() => this.startGame()}/>\n        }\n    }\n}\n\nexport default GameController;"]},"metadata":{},"sourceType":"module"}