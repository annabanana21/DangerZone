{"ast":null,"code":"\"use strict\";\n\n(function () {\n  var buf,\n      bufIdx = 0,\n      hexBytes = [],\n      i; // Pre-calculate toString(16) for speed\n\n  for (i = 0; i < 256; i++) {\n    hexBytes[i] = (i + 0x100).toString(16).substr(1);\n  } // Buffer random numbers for speed\n  // Reduce memory usage by decreasing this number (min 16)\n  // or improve speed by increasing this number (try 16384)\n\n\n  uuid.BUFFER_SIZE = 4096; // Binary uuids\n\n  uuid.bin = uuidBin; // Clear buffer\n\n  uuid.clearBuffer = function () {\n    buf = null;\n    bufIdx = 0;\n  }; // Test for uuid\n\n\n  uuid.test = function (uuid) {\n    if (typeof uuid === 'string') {\n      return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(uuid);\n    }\n\n    return false;\n  }; // Node & Browser support\n\n\n  var crypt0;\n\n  if (typeof crypto !== 'undefined') {\n    crypt0 = crypto;\n  } else if (typeof window !== 'undefined' && typeof window.msCrypto !== 'undefined') {\n    crypt0 = window.msCrypto; // IE11\n  }\n\n  if (typeof module !== 'undefined' && typeof require === 'function') {\n    crypt0 = crypt0 || require('crypto');\n    module.exports = uuid;\n  } else if (typeof window !== 'undefined') {\n    window.uuid = uuid;\n  } // Use best available PRNG\n  // Also expose this so you can override it.\n\n\n  uuid.randomBytes = function () {\n    if (crypt0) {\n      if (crypt0.randomBytes) {\n        return crypt0.randomBytes;\n      }\n\n      if (crypt0.getRandomValues) {\n        return function (n) {\n          var bytes = new Uint8Array(n);\n          crypt0.getRandomValues(bytes);\n          return bytes;\n        };\n      }\n    }\n\n    return function (n) {\n      var i,\n          r = [];\n\n      for (i = 0; i < n; i++) {\n        r.push(Math.floor(Math.random() * 256));\n      }\n\n      return r;\n    };\n  }(); // Buffer some random bytes for speed\n\n\n  function randomBytesBuffered(n) {\n    if (!buf || bufIdx + n > uuid.BUFFER_SIZE) {\n      bufIdx = 0;\n      buf = uuid.randomBytes(uuid.BUFFER_SIZE);\n    }\n\n    return buf.slice(bufIdx, bufIdx += n);\n  } // uuid.bin\n\n\n  function uuidBin() {\n    var b = randomBytesBuffered(16);\n    b[6] = b[6] & 0x0f | 0x40;\n    b[8] = b[8] & 0x3f | 0x80;\n    return b;\n  } // String UUIDv4 (Random)\n\n\n  function uuid() {\n    var b = uuidBin();\n    return hexBytes[b[0]] + hexBytes[b[1]] + hexBytes[b[2]] + hexBytes[b[3]] + '-' + hexBytes[b[4]] + hexBytes[b[5]] + '-' + hexBytes[b[6]] + hexBytes[b[7]] + '-' + hexBytes[b[8]] + hexBytes[b[9]] + '-' + hexBytes[b[10]] + hexBytes[b[11]] + hexBytes[b[12]] + hexBytes[b[13]] + hexBytes[b[14]] + hexBytes[b[15]];\n  }\n})();","map":{"version":3,"sources":["/mnt/c/Users/avmas/Desktop/dangerzone/client/node_modules/uuid-random/index.js"],"names":["buf","bufIdx","hexBytes","i","toString","substr","uuid","BUFFER_SIZE","bin","uuidBin","clearBuffer","test","crypt0","crypto","window","msCrypto","module","require","exports","randomBytes","getRandomValues","n","bytes","Uint8Array","r","push","Math","floor","random","randomBytesBuffered","slice","b"],"mappings":"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","sourcesContent":["\"use strict\";\n\n(function(){\n\n  var\n    buf,\n    bufIdx = 0,\n    hexBytes = [],\n    i\n  ;\n\n  // Pre-calculate toString(16) for speed\n  for (i = 0; i < 256; i++) {\n    hexBytes[i] = (i + 0x100).toString(16).substr(1);\n  }\n\n  // Buffer random numbers for speed\n  // Reduce memory usage by decreasing this number (min 16)\n  // or improve speed by increasing this number (try 16384)\n  uuid.BUFFER_SIZE = 4096;\n\n  // Binary uuids\n  uuid.bin = uuidBin;\n\n  // Clear buffer\n  uuid.clearBuffer = function() {\n    buf = null;\n    bufIdx = 0;\n  };\n\n  // Test for uuid\n  uuid.test = function(uuid) {\n    if (typeof uuid === 'string') {\n      return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(uuid);\n    }\n    return false;\n  };\n\n  // Node & Browser support\n  var crypt0;\n  if (typeof crypto !== 'undefined') {\n    crypt0 = crypto;\n  } else if( (typeof window !== 'undefined') && (typeof window.msCrypto !== 'undefined')) {\n    crypt0 = window.msCrypto; // IE11\n  }\n\n  if ((typeof module !== 'undefined') && (typeof require === 'function')) {\n    crypt0 = crypt0 || require('crypto');\n    module.exports = uuid;\n  } else if (typeof window !== 'undefined') {\n    window.uuid = uuid;\n  }\n\n  // Use best available PRNG\n  // Also expose this so you can override it.\n  uuid.randomBytes = (function(){\n    if (crypt0) {\n      if (crypt0.randomBytes) {\n        return crypt0.randomBytes;\n      }\n      if (crypt0.getRandomValues) {\n        return function(n) {\n          var bytes = new Uint8Array(n);\n          crypt0.getRandomValues(bytes);\n          return bytes;\n        };\n      }\n    }\n    return function(n) {\n      var i, r = [];\n      for (i = 0; i < n; i++) {\n        r.push(Math.floor(Math.random() * 256));\n      }\n      return r;\n    };\n  })();\n\n  // Buffer some random bytes for speed\n  function randomBytesBuffered(n) {\n    if (!buf || ((bufIdx + n) > uuid.BUFFER_SIZE)) {\n      bufIdx = 0;\n      buf = uuid.randomBytes(uuid.BUFFER_SIZE);\n    }\n    return buf.slice(bufIdx, bufIdx += n);\n  }\n\n  // uuid.bin\n  function uuidBin() {\n    var b = randomBytesBuffered(16);\n    b[6] = (b[6] & 0x0f) | 0x40;\n    b[8] = (b[8] & 0x3f) | 0x80;\n    return b;\n  }\n\n  // String UUIDv4 (Random)\n  function uuid() {\n    var b = uuidBin();\n    return hexBytes[b[0]] + hexBytes[b[1]] +\n      hexBytes[b[2]] + hexBytes[b[3]] + '-' +\n      hexBytes[b[4]] + hexBytes[b[5]] + '-' +\n      hexBytes[b[6]] + hexBytes[b[7]] + '-' +\n      hexBytes[b[8]] + hexBytes[b[9]] + '-' +\n      hexBytes[b[10]] + hexBytes[b[11]] +\n      hexBytes[b[12]] + hexBytes[b[13]] +\n      hexBytes[b[14]] + hexBytes[b[15]]\n    ;\n  }\n\n})();\n"]},"metadata":{},"sourceType":"script"}